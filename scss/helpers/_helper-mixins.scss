

//*********************
//MAKE GAPS
//*********************
//*
//USAGE: @include setGaps('margin');
//*
@mixin setGaps($property-name, $min-limit: 0, $max-limit: 50, $gap: 5, $ignore-gap: 0){
    $pos-list: top left bottom right;
    @for $i from $min-limit through $max-limit {
        $value: $i * $gap;
        $is-write: if(($ignore-gap > 0), if(($value % $ignore-gap == 0), 0, 1), 1);
        @if ($is-write == 1) {
            .#{$property-name}-#{$value}{
                #{$property-name}: $value * 1px !important;
            }
            @each $pos in $pos-list{
                .#{$property-name}-#{$pos}-#{$value}{
                    #{$property-name}-#{$pos}: $value * 1px !important;
                }
            }
            .#{$property-name}-h-#{$value} {
                #{$property-name}-left: $value * 1px !important;
                #{$property-name}-right: $value * 1px !important;
            }
            .#{$property-name}-v-#{$value} {
                #{$property-name}-top: $value * 1px !important;
                #{$property-name}-bottom: $value * 1px !important;
            }
        }
    }
}

//*********************
//MAKE OVERLAYS
//*********************
//*
//USAGE: @include setOverlays(overlay);
//*
@mixin setOverlays($class-name, $length: 20, $gradient: false, $gap: 5){
    @for $i from 0 through ($length - 1) {
        $overlay: $i * $gap;
        $class-part: $overlay;
        @if $i > 8 and $i < 12 {
            $class-part: $class-part - 1;
        }
        .#{$class-name}-#{$class-part}{
            position: relative;
            z-index: 1;
            &:before {
                content: "";
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                z-index: -1;
                @if $gradient == true {
                    @include linear-gradient(to top, color-opacity($black, $overlay/100) 0%, transparent 100%);
                } @else {
                    background: color-opacity($black, $overlay/100);
                }
            }
        }
    }
}

/**************/
/* Clearfix */
/**************/
@mixin clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}


/**************/
/* multiline */
/**************/
//*
//USAGE: @include multiLineEllipsis($lineHeight: 1.2em, $lineCount: 3, $bgColor: white);  
//*
@mixin multiLineEllipsis($lineHeight: 1.2em, $lineCount: 1, $bgColor: white){
  overflow: hidden;
  position: relative;
  line-height: $lineHeight;
  max-height: $lineHeight * $lineCount; 
  text-align: justify;
  margin-right: -1em;
  padding-right: 1em;
  &:before {
    content: '...';
    position: absolute;
    right: 0;
    bottom: 0;
  }
  &:after {
    content: '';
    position: absolute;
    right: 0;
    width: 1em;
    height: 1em;
    margin-top: 0.2em;
    background: $bgColor;
  }
}
